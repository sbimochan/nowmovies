{"version":3,"sources":["components/ShowName.js","components/MovieName.js","utils/interpolate.js","components/MediaCard/MediaCard.js","utils/imgUrlMaker.js","utils/utils.js","components/MediaCard/styles.js"],"names":["ShowName","info","name","MovieName","title","findImdbId","id","media_type","a","fetchExternalIds","externalId","imdbId","data","imdb_id","getImdbUrl","tmdbid","mediaType","url","MediaCard","props","makeImdbUrl","state","imdbUrl","setState","makeSearchQueries","mediaName","youtubeUrl","replace","youtubeSearchQueryGenerator","ytsUrl","encodeURIComponent","trim","ytsQuery","torrentLink","this","classes","Dashboard","Consumer","genre","path","filteredGenreNames","filter","genreList","genre_ids","includes","map","genres","Paper","className","movieCard","elevation","infoSection","movieHeader","Typography","movieTitle","variant","color","vote_average","duration","first_air_date","release_date","index","key","description","descriptionText","text","length","ending","substring","textTruncate","overview","blurBackground","style","backgroundImage","backdrop_path","poster_path","projectConfig","imgURL","actions","Button","marginRight20","containedSecondary","youtubeRed","startIcon","href","target","rel","Tooltip","tooltip","arrow","outlinedPrimary","ytsGreen","Component","withStyles","theme","position","height","margin","palette","common","white","backgroundColor","background","dark","borderRadius","transition","transform","width","backgroundBlendMode","zIndex","padding","spacing","fontSize","fontWeight","textTransform","director","marginTop","display","border","marginLeft","footer","paddingLeft","paddingBottom","icons","cursor","transitionDelay","top","right","backgroundSize","backgroundPosition","breakpoints","down","fullWidth","maxHeight","overflow","marginRight","left","bottom"],"mappings":"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","file":"static/js/4.6c895bf0.chunk.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nconst ShowName = ({ info }) => <span>{info.name}</span>;\n\nShowName.propTypes = {\n  info: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n};\nexport default ShowName;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nconst MovieName = ({ info }) => <span>{info.title}</span>;\n\nMovieName.propTypes = {\n  info: PropTypes.shape({\n    title: PropTypes.string.isRequired\n  })\n};\nexport default MovieName;\n","/* eslint-disable camelcase */\nimport { fetchExternalIds } from 'services/apiServices';\n\n/**\n * Build supplied string by interpolating properties inside delimiters('{ }') with the given parameters.\n *\n * @example\n * interpolate(':name is here.', {name: 'Barbara'})\n * => 'Barbaba is here.'\n *\n * @param {string} str\n * @param {object} params\n * @returns {string}\n */\nexport function interpolate(str, params) {\n  let formattedString = str;\n\n  for (const [key, value] of Object.entries(params)) {\n    const val = value || '';\n\n    formattedString = formattedString.replace(new RegExp(':' + key, 'gi'), val.toString());\n  }\n\n  return formattedString;\n}\n\nexport async function findImdbId(id, media_type) {\n  const externalId = await fetchExternalIds(id, media_type);\n  const imdbId = externalId.data.imdb_id;\n\n  return imdbId;\n}\n\nexport async function getImdbUrl(tmdbid, mediaType) {\n  const imdbId = await findImdbId(tmdbid, mediaType);\n  const url = 'https://imdb.com/title/' + imdbId;\n\n  return url;\n}\n\nexport function youtubeSearchQueryGenerator(mediaName) {\n  return `https://www.youtube.com/results?search_query=${mediaName.replace(/ /g, '+')}+1080p+trailer`;\n}\n\nexport function ytsQuery(mediaName) {\n  return `https://yts.mx/browse-movies/${encodeURIComponent(mediaName.trim())}/all/all/0/latest/0/all`;\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport ShowName from 'components/ShowName';\nimport MovieName from 'components/MovieName';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport { DashboardContext } from 'components/Dashboard';\nimport { withStyles, Paper, Typography, Tooltip } from '@material-ui/core';\nimport { getImdbUrl, youtubeSearchQueryGenerator, ytsQuery } from 'utils/interpolate';\n\nimport styles from './styles';\n\nimport { textTruncate } from '../../utils/utils';\nimport { imgUrlMaker } from '../../utils/imgUrlMaker';\n\nclass MediaCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      info: props.info,\n      imdbUrl: '',\n      youtubeUrl: '',\n      torrentLink: ''\n    };\n  }\n\n  makeImdbUrl = async () => {\n    const imdbUrl = await getImdbUrl(this.state.info.id, this.state.info.media_type);\n\n    this.setState({\n      imdbUrl: imdbUrl\n    });\n  };\n\n  makeSearchQueries = () => {\n    const mediaName = this.state.info.title || this.state.info.name;\n    const youtubeUrl = youtubeSearchQueryGenerator(mediaName);\n    const ytsUrl = ytsQuery(mediaName);\n\n    this.setState({\n      youtubeUrl: youtubeUrl,\n      torrentLink: ytsUrl\n    });\n  };\n\n  componentDidMount() {\n    this.makeImdbUrl();\n    this.makeSearchQueries();\n  }\n  render() {\n    const classes = this.props.classes;\n\n    return (\n      <DashboardContext.Consumer>\n        {(genre) => {\n          const filteredGenres = genre.filter((genreList) => this.state.info.genre_ids.includes(genreList.id));\n          const filteredGenreNames = filteredGenres.map((genres) => genres.name);\n\n          return (\n            <Paper className={classes.movieCard} elevation={20}>\n              <div className={classes.infoSection}>\n                <header className={classes.movieHeader}>\n                  <Typography className={classes.movieTitle} variant=\"h1\" color=\"inherit\">\n                    {this.state.info.media_type === 'movie' ? (\n                      <MovieName info={this.state.info} />\n                    ) : (\n                      <ShowName info={this.state.info} />\n                    )}\n                  </Typography>\n                  <div className=\"vote\">\n                    {this.state.info.vote_average}\n                    <span className=\"out-of-10\">/10</span>\n                  </div>\n                  <Typography className={classes.duration} variant=\"body1\" color=\"inherit\">\n                    {this.state.info.first_air_date || this.state.info.release_date}\n                  </Typography>\n                  <Typography className={classes.genre} variant=\"body1\" color=\"inherit\">\n                    {filteredGenreNames.map((genre, index) => (\n                      <li className=\"genre-list\" key={index}>\n                        {genre}\n                      </li>\n                    ))}\n                  </Typography>\n                </header>\n\n                <div className={classes.description}>\n                  <Typography className={classes.descriptionText} variant=\"body1\" color=\"inherit\">\n                    {textTruncate(this.state.info.overview, 250)}\n                  </Typography>\n                </div>\n              </div>\n              <div\n                className={classes.blurBackground}\n                style={{\n                  backgroundImage: `url(${imgUrlMaker(this.state.info.backdrop_path || this.state.info.poster_path)})`\n                }}\n              />\n              <div className={classes.actions}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.marginRight20}\n                  classes={{ containedSecondary: classes.youtubeRed }}\n                  startIcon={<YouTubeIcon />}\n                  href={this.state.youtubeUrl}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Watch Trailer\n                </Button>\n                <Tooltip classes={{ tooltip: classes.tooltip }} arrow title=\"Heuristic. Might show empty results.\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    classes={{ outlinedPrimary: classes.ytsGreen }}\n                    startIcon={<SearchIcon />}\n                    href={this.state.torrentLink}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Search Torrent\n                  </Button>\n                </Tooltip>\n              </div>\n            </Paper>\n          );\n        }}\n      </DashboardContext.Consumer>\n    );\n  }\n}\n\nMediaCard.propTypes = {\n  info: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MediaCard);\n","import { projectConfig } from '../projectConfig';\n\nexport function imgUrlMaker(path) {\n  const url = projectConfig.imgURL + path;\n\n  return url;\n}\n","export const textTruncate = (text = '', length = 250) => {\n  const ending = '...';\n\n  if (length === null) {\n    length = 100;\n  }\n\n  if (text?.length > length) {\n    return text.substring(0, length - ending?.length) + ending;\n  } else {\n    return text;\n  }\n};\n","export default (theme) => ({\n  movieCard: {\n    position: 'relative',\n    height: 400,\n    margin: '20px 10px',\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.background.dark,\n    borderRadius: 10,\n    transition: 'all 0.4s',\n    '&:hover': {\n      transform: 'scale(1.02)',\n      transition: 'all 0.4s'\n    }\n  },\n  infoSection: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    backgroundBlendMode: 'multiply',\n    background: 'linear-gradient(to right, #0d0d0c 50%, transparent 100%)',\n    zIndex: 2,\n    borderRadius: 10\n  },\n  movieHeader: {\n    position: 'relative',\n    padding: theme.spacing(2),\n    height: '40%',\n    width: '60%'\n  },\n  movieTitle: {\n    fontSize: '25px',\n    fontWeight: 400,\n    textTransform: 'capitalize'\n  },\n  director: {\n    color: '#9ac7fa',\n    fontWeight: '500',\n    fontSize: '16px',\n    marginTop: theme.spacing(1)\n  },\n  duration: {\n    display: 'inline-block',\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n    border: '1px solid rgba(255,255,255,0.13)'\n  },\n  genre: {\n    display: 'inline-block',\n    color: '#cee4fd',\n    marginLeft: theme.spacing(2)\n  },\n  description: {\n    padding: theme.spacing(2),\n    height: '50%',\n    width: '50%'\n  },\n  descriptionText: {\n    color: '#cfd6e1'\n  },\n  footer: {\n    height: '10%',\n    paddingLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(3)\n  },\n  icons: {\n    display: 'inline-block',\n    cursor: 'pointer',\n    color: 'rgba(255, 255, 255, 0.4)',\n    margin: theme.spacing(0, 1),\n    transition: 'all 0.3s',\n    '&:hover': {\n      color: 'rgba(255, 255, 255, 0.8)',\n      transform: 'scale(1.25)',\n      transition: 'all 0.3s',\n      transitionDelay: '0.15s'\n    }\n  },\n  blurBackground: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    height: '100%',\n    right: 0,\n    backgroundSize: 'cover !important',\n    borderRadius: 11,\n    width: '80%',\n    backgroundPosition: '-100% 10% !important'\n  },\n\n  [theme.breakpoints.down('sm')]: {\n    fullWidth: { width: '100%' },\n    movieCard: {\n      width: '90%',\n      margin: '0 auto'\n      // height: 'auto'\n    },\n    blurBackground: {\n      width: '100%',\n      backgroundPosition: '50% 50% !important'\n    },\n    movieHeader: {\n      width: '100%',\n      marginTop: theme.spacing(3)\n    },\n    description: {\n      width: '80%',\n      maxHeight: 100,\n      overflow: 'hidden'\n    },\n    infoSection: {\n      background: 'linear-gradient(to top, rgb(20, 20, 19) 50%, transparent 100%)',\n      zIndex: 2,\n      borderRadius: 10\n    },\n    ytsGreen: {\n      display: 'none'\n    }\n    // actions: {\n    //   left: '16px !important'\n    // }\n  },\n  marginRight20: {\n    marginRight: 20\n  },\n  youtubeRed: {\n    backgroundColor: '#FF0000'\n  },\n  ytsGreen: {\n    color: '#6ac045',\n    border: '1px solid #6ac045'\n  },\n  tooltip: {\n    fontSize: 14\n  },\n  actions: {\n    position: 'absolute',\n    zIndex: 3,\n    left: 16,\n    bottom: 10\n  }\n});\n"],"sourceRoot":""}